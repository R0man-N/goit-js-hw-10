{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stateInput = document.querySelector('input[name=\"state\"]:checked');\n\n  if (!delayInput || !stateInput) {\n    console.error('Invalid form inputs');\n    return;\n  }\n\n  const delay = parseInt(delayInput.value, 10);\n  const state = stateInput.value;\n\n  const snackbarPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  snackbarPromise.then(\n    delay => {\n      iziToast.success({\n        title: 'Fulfilled promise',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    },\n    delay => {\n      iziToast.error({\n        title: 'Rejected promise',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    }\n  );\n});\n"],"names":["event","delayInput","stateInput","delay","state","resolve","reject","iziToast"],"mappings":"wIAGA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUA,EAAO,CAC1EA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAa,SAAS,cAAc,6BAA6B,EAEvE,GAAI,CAACD,GAAc,CAACC,EAAY,CAC9B,QAAQ,MAAM,qBAAqB,EACnC,MACD,CAED,MAAMC,EAAQ,SAASF,EAAW,MAAO,EAAE,EACrCG,EAAQF,EAAW,MAED,IAAI,QAAQ,CAACG,EAASC,IAAW,CACvD,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAEe,KACdA,GAAS,CACPI,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BJ,KAC3C,CAAO,CACF,EACDA,GAAS,CACPI,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBJ,KAC1C,CAAO,CACF,CACL,CACA,CAAC"}